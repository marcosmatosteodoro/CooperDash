version: "3.9"
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - /var/www/vendor
    ports:
      - "8000:8000"
    networks:
      - cooperdash-network
    environment:
      APP_NAME: Laravel
      APP_URL: http://localhost
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: base64:xxxxxxxxxxxxxxxx
      APP_LOCALE: en
      APP_FALLBACK_LOCALE: en
      APP_FAKER_LOCALE: en_US
      APP_MAINTENANCE_DRIVER: file
      PHP_CLI_SERVER_WORKERS: 4
      BCRYPT_ROUNDS: 12
      LOG_CHANNEL: stack
      LOG_STACK: single
      LOG_DEPRECATIONS_CHANNEL: null
      LOG_LEVEL: debug
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: mydb
      DB_USERNAME: myuser
      DB_PASSWORD: mypass
      SESSION_DRIVER: database
      SESSION_LIFETIME: 120
      SESSION_ENCRYPT: false
      SESSION_PATH: /
      SESSION_DOMAIN: null
      BROADCAST_CONNECTION: log
      FILESYSTEM_DISK: local
      QUEUE_CONNECTION: database
      CACHE_STORE: database
      MEMCACHED_HOST: 127.0.0.1
      REDIS_CLIENT: phpredis
      REDIS_HOST: 127.0.0.1
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
      MAIL_MAILER: log
      MAIL_SCHEME: null
      MAIL_HOST: 127.0.0.1
      MAIL_PORT: 2525
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_FROM_ADDRESS: "hello@example.com"
      AWS_ACCESS_KEY_ID: null
      AWS_SECRET_ACCESS_KEY: null
      AWS_DEFAULT_REGION: us-east-1
      AWS_BUCKET: null
      AWS_USE_PATH_STYLE_ENDPOINT: false
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - cooperdash-network
    environment:
      NEXT_PUBLIC_API_URL: http://localhost/api

  db:
    image: postgres:16
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cooperdash-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - cooperdash-network

volumes:
  postgres_data:

networks:
  cooperdash-network:
    driver: bridge