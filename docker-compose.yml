version: "3.9"
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - /var/www/vendor
    ports:
      - "8000:8000"
    networks:
      - unicred-network
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: base64:xxxxxxxxxxxxxxxx
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: mydb
      DB_USERNAME: myuser
      DB_PASSWORD: mypass
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: next-frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - unicred-network
    environment:
      NEXT_PUBLIC_API_URL: http://nginx/api

  db:
    image: postgres:16
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - unicred-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - unicred-network

volumes:
  postgres_data:

networks:
  unicred-network:
    driver: bridge