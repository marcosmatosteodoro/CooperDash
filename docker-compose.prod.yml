services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-backend-prod
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - .:/var/www
      - /var/www/vendor
    ports:
      - "8000:8000"
    networks:
      - cooperdash-network
    env_file:
      - .env
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      target: production
    container_name: frontend-prod
    restart: unless-stopped
    working_dir: /app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - cooperdash-network
    environment:
      - NODE_ENV=production
    env_file:
      - frontend/.env.production

  db:
    image: postgres:16
    container_name: postgres-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - cooperdash-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy-prod
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - cooperdash-network

volumes:
  postgres_data_prod:

networks:
  cooperdash-network:
    driver: bridge